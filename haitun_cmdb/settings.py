"""
Django settings for haitun_cmdb project.

Generated by 'django-admin startproject' using Django 4.2.1.
#vue2写法

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/
#UI地址
#https://panjiachen.github.io/vue-element-admin/#/dashboard
#https://element.eleme.io/#/zh-CN/component/icon
https://element.eleme.io/#/zh-CN/component/select
For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
import datetime
import time


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


OAUTH2_PROVIDER = {
    "OIDC_ENABLED": True,
}


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-qhkx^p)8ag(k1#=-0z)9yh*e@ujyn@r%)cgpko$9&m%pzho-5b"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]
# AUTH_USER_MODEL = 'ClusterManagement.MyUser'

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (

        "rest_framework.authentication.BasicAuthentication",
        "rest_framework.authentication.SessionAuthentication",
        "rest_framework_jwt.authentication.JSONWebTokenAuthentication",
    ),
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAdminUser",
         # 'rest_framework.permissions.IsAuthenticated',  #配置全局权限

    ],
    "PAGE_SIZE": 2,
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "DEFAULT_FILTER_BACKENDS": ("django_filters.rest_framework.DjangoFilterBackend",),
}
# Application definition
JWT_AUTH = {
    "JWT_EXPIRATION_DELTA": datetime.timedelta(days=7),  # 也可以设置seconds=20
    "JWT_AUTH_HEADER_PREFIX": "JWT",  # JWT跟前端保持一致，比如“token”这里设置成JWT
}

CELERY_BROKER_URL = 'redis://redis-svc:6379/0'  # Broker配置，使用Redis作为消息中间件

CELERY_RESULT_BACKEND = 'redis://redis-svc:6379/0'  # BACKEND配置，这里使用redis

CELERY_RESULT_EXPIRES = None  # 存储结果过期时间

CELERY_RESULT_SERIALIZER = 'json'  # 结果序列化方案

SIMPLEUI_CONFIG = {
    "system_keep": True,
    # 开启排序和过滤功能, 不填此字段为默认排序和全部显示, 空列表[] 为全部不显示.
    "menu_display": ["配置中心",
                     #  "集群管理",
                     "帮助文档",
                     "任务中心",
                     #  "oauth",
                     "认证和授权"],
    "dynamic": True,  # 设置是否开启动态菜单, 默认为False. 如果开启, 则会在每次用户登陆时动态展示菜单内容
    "menus": [
        # {
        #     "app": "oauth2_provider",
        #     "name": "oauth",
        #     "icon": "fas fa-user-shield",
        #     "models": [
        #         {"name": "accesstoken", "icon": "fa fa-user",
        #             "url": "oauth2_provider/accesstoken/"},
        #         {"name": "application", "icon": "fa fa-user",
        #             "url": "oauth2_provider/application/"},
        #         {"name": "idtoken", "icon": "fa fa-user",
        #             "url": "oauth2_provider/idtoken/"},
        #         {"name": "refreshtoken", "icon": "fa fa-user",
        #             "url": "oauth2_provider/refreshtoken/"},

        #     ],
        # },
        {
            "name": "集群管理",
            "icon": "fa fa-file",
            "models": [
                {
                    "name": "节点",
                    "url": "https://www.wezoz.com",
                    "icon": "fab fa-github",
                },
                {
                    "name": "集群",
                    "url": "https://www.wezoz.com",
                    "icon": "fab fa-github",
                },
            ],
        },
    ],
}
LOGIN_URL = '/admin/login/'


INSTALLED_APPS = [
    "ConfCen",
    "drf_yasg",
    "Doc",
    "oauth2_provider",
    "mdeditor",
    "django_prometheus",
    "simpleui",
    "corsheaders",
    "rest_framework",
    "rest_framework.authtoken",
    "django_filters",
    "rest_framework_swagger",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]
CORS_ORIGIN_ALLOW_ALL = True


MIDDLEWARE = [
    "django_prometheus.middleware.PrometheusBeforeMiddleware",
    "django_prometheus.middleware.PrometheusAfterMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "haitun_cmdb.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],  # 修改位置
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "haitun_cmdb.wsgi.application"

SIMPLEUI_LOGO = "https://www.hitosea.com/images/logo.svg"

# 'https://avatars2.githubusercontent.com/u/13655483?s=60&v=4'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


SIMPLEUI_HOME_ICON = "fa fa-user"

SIMPLEUI_HOME_INFO = True
SIMPLEUI_HOME_QUICK = True
SIMPLEUI_HOME_ACTION = True


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "zh-hans"

TIME_ZONE = "Asia/Shanghai"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
MEDIA_ROOT = os.path.join(BASE_DIR, "uploads")  # 新建一个uploads文件夹，且在项目目录下
MEDIA_URL = "/uploads/"
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static/"),
]
STATIC_ROOT = os.path.join(BASE_DIR, "static_new/")

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
